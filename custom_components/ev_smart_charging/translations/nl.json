{
    "config": {
        "step": {
            "user": {
                "description": "Configuratie van de naam en gekoppelde entities.",
                "data": {
                    "device_name": "Naam",
                    "price_sensor": "Electriciteit prijs template entity",
                    "ev_soc_sensor": "EV SOC sensor",
                    "ev_target_soc_sensor": "EV doel SOC input (enkele spatie om niet te gebruiken)",
                    "charger_entity": "Oplader bedienings switch (enkele spatie om niet te gebruiken)",
                    "ev_controlled": "Een EV integratie bediend het starten/stoppen van het opladen"
                }
            }
        },
        "error": {
            "price_not_found": "Electriciteit prijs sensor niet gevonden.",
            "price_not_sensor": "De electriciteit prijs entity is geen sensor.",
            "sensor_is_not_price": "De Electriciteit prijs sensor heeft niet de benodigde attributen.",
            "ev_soc_not_found": "EV SOC sensor is niet gevonden.",
            "ev_soc_invalid_data": "De SOC sensor heeft ongeldige data.",
            "ev_target_soc_not_found": "EV doel SOC input niet gevonden.",
            "ev_target_soc_invalid_data": "De EV doel SOC input heeft ongeldige data.",
            "charger_control_switch_not_found": "Oplader bedienings switch niet gevonden.",
            "charger_control_switch_not_switch": "Oplader bedienings switch entity is geen switch."
        }
    },
    "options": {
        "step": {
            "init": {
                "description": "Configuratie van de gekoppelde entities.",
                "data": {
                    "price_sensor": "Electriciteit prijs template entity",
                    "ev_soc_sensor": "EV SOC sensor",
                    "ev_target_soc_sensor": "EV doel SOC input (enkele spatie om niet te gebruiken)",
                    "charger_entity": "Oplader bedienings switch (enkele spatie om niet te gebruiken)",
                    "ev_controlled": "Een EV integratie bediend het starten/stoppen van het opladen"
                }
            }
        },
        "error": {
            "price_not_found": "Electriciteit prijs sensor niet gevonden.",
            "price_not_sensor": "De electriciteit prijs entity is geen sensor.",
            "sensor_is_not_price": "De Electriciteit prijs sensor heeft niet de benodigde attributen.",
            "ev_soc_not_found": "EV SOC sensor is niet gevonden.",
            "ev_soc_invalid_data": "De SOC sensor heeft ongeldige data.",
            "ev_target_soc_not_found": "EV doel SOC input niet gevonden.",
            "ev_target_soc_invalid_data": "De EV doel SOC input heeft ongeldige data.",
            "charger_control_switch_not_found": "Oplader bedienings switch niet gevonden.",
            "charger_control_switch_not_switch": "Oplader bedienings switch entity is geen switch."
        }
    },
    "entity": {
        "button": {
            "manually_start_charging": { "name": "Manually start charging" },
            "manually_stop_charging": { "name": "Manually stop charging" }
        },
        "number": {
            "charging_speed": { "name": "Charging speed" },
            "electricity_price_limit": { "name": "Electricity price limit" },
            "opportunistic_level": { "name": "Opportunistic level" },
            "low_price_charging_level": { "name": "Low price charging level" },
            "low_soc_charging_level": { "name": "Low SOC charging level" },
            "minimum_ev_soc": { "name": "Minimum EV SOC" }
        },
        "select": {
            "charge_start_time": { "name": "Charge start time" },
            "charge_completion_time": { "name": "Charge completion time" }
        },
        "sensor": {
            "charging": {
                "name": "Charging",
                "state": {
                    "on": "On",
                    "off": "Off"
                },
                "state_attributes": {
                    "current_price": { "name": "Current price"},
                    "ev_soc": {"name": "EV SOC"},
                    "ev_target_soc": {"name": "EV target SOC"},
                    "charging_is_planned": {"name": "Charging is planned"},
                    "charging_start_time": {"name": "Charging start time"},
                    "charging_stop_time": {"name": "Charging stop time"},
                    "charging_number_of_hours": {"name": "Charging number of hours"},
                    "raw_two_days": {"name": "Raw two days"},
                    "charging_schedule": {"name": "Charging schedule"}
                }
            },
            "status": {
                "name": "Status",
                "state": {
                    "waiting_for_new_prices": "Waiting for new prices",
                    "no_charging_planned": "No charging planned",
                    "waiting_for_charging_to_begin": "Waiting for charging to begin",
                    "charging": "Charging",
                    "keeping_charger_on": "Keeping charger on",
                    "disconnected": "Disconnected",
                    "smart_charging_not_active": "Smart charging not active",
                    "low_price_charging": "Low price charging",
                    "low_soc_charging": "Low SOC charging"
                }
            }
        },
        "switch": {
            "smart_charging_activated": { "name": "Smart charging activated" },
            "apply_price_limit": { "name": "Apply price limit" },
            "continuous_charging_preferred": { "name": "Continuous charging preferred" },
            "ev_connected": { "name": "EV connected" },
            "keep_charger_on": { "name": "Keep charger on" },
            "opportunistic_charging": { "name": "Opportunistic charging" },
            "low_price_charging": { "name": "Low price charging" },
            "low_soc_charging": { "name": "Low SOC charging" }
        }
    }
}